function(AddTargetProperty module propname)
    list(APPEND listProperties COMPILE_DEFINITIONS INCLUDE_DIRECTORIES LINK_DEPENDS)
    set(newvalue "")
    get_target_property(oldvalue ${module} ${propname})
    if (oldvalue)
        set(newvalue ${oldvalue})
    endif ()
    list(FIND listProperties ${propname} listIndex)
    if (NOT listIndex EQUAL -1)
        # list property
        list(APPEND newvalue ${ARGN})
    else ()
        # string property
        foreach (flag ${ARGN})
            set(newvalue "${newvalue} ${flag}")
        endforeach ()
    endif ()
    set_property(TARGET ${module} PROPERTY ${propname} ${newvalue})
endfunction()

function(AddTargetCompileFlags module flags)
    if (${ARGC} GREATER 2)
        message(FATAL_ERROR "Excess arguments to AddTargetCompileFlags! Module ${module}, args ${ARGN}")
    endif ()
    add_target_property(${module} COMPILE_FLAGS ${flags})
endfunction()

function(AddTargetLinkFlags module flags)
    if (${ARGC} GREATER 2)
        message(FATAL_ERROR "Excess arguments to AddTargetLinkFlags! Module ${module}, args ${ARGN}")
    endif ()
    AddTargetProperty(${module} LINK_FLAGS ${flags})
endfunction()

function(AddTargetCompileDefinitions module)
    AddTargetProperty(${module} COMPILE_DEFINITIONS ${ARGN})
endfunction()

function(AddTargetINcludeDirectories module)
    AddTargetProperty(${module} INCLUDE_DIRECTORIES ${ARGN})
endfunction()

function(AddCompileFlags flags)
    if (${ARGC} GREATER 1)
        message(FATAL_ERROR "Excess arguments to AddCompileFlags! Args ${ARGN}")
    endif ()
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${flags}" PARENT_SCOPE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${flags}" PARENT_SCOPE)
    set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} ${flags}" PARENT_SCOPE)
endfunction()

function(AddCompileFlagsLang flags lang)
    if (NOT ${ARGC} EQUAL 2)
        message(FATAL_ERROR "Wrong arguments to AddCompileFlagsLang! Args ${ARGN}")
    endif ()

    set(CMAKE_${lang}_FLAGS "${CMAKE_${lang}_FLAGS} ${flags}" PARENT_SCOPE)
endfunction()

macro(ReplaceCompileFlags oldflags newflags)
    if (NOT ${ARGC} EQUAL 2)
        message(FATAL_ERROR "Wrong arguments to ReplaceCompileFlags! Args ${ARGN}")
    endif ()
    replace_compiler_option(CMAKE_C_FLAGS ${oldflags} ${newflags})
    replace_compiler_option(CMAKE_CXX_FLAGS ${oldflags} ${newflags})
    replace_compiler_option(CMAKE_ASM_FLAGS ${oldflags} ${newflags})
endmacro()

macro(ReplaceCompileFlagsLang oldflags newflags lang)
    if (NOT ${ARGC} EQUAL 3)
        message(FATAL_ERROR "Wrong arguments to ReplaceCompileFlagsLang! Args ${ARGN}")
    endif ()
    replace_compiler_option(CMAKE_${lang}_FLAGS ${oldflags} ${newflags})
endmacro()

macro(AddAsmFiles target)
    list(APPEND ${target} ${ARGN})
endmacro()

function(AddLinkerScript target linkerScript)
    get_filename_component(fileFullPath ${linkerScript} ABSOLUTE)
    AddTargetLinkFlags(${target} "-T ${fileFullPath}")
    AddTargetProperty(${target} LINK_DEPENDS ${fileFullPath})
    add_custom_target(${linkerScript} DEPENDS ${linkerScript} SOURCES ${linkerScript})
    add_dependencies(${target} ${linkerScript})
endfunction()

function(AddFileToDist filePath distPath)
    add_custom_command(
            OUTPUT ${DistDirectory}/${distPath}
            COMMAND ${CMAKE_COMMAND} -E copy ${filePath} ${DistDirectory}/${distPath}
            DEPENDS ${filePath}
    )
    add_custom_target(dist-${distPath} ALL DEPENDS ${DistDirectory}/${distPath})
endfunction()